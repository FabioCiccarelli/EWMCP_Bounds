#ifndef GLOBAL_VARIABLES_HEADER
#define GLOBAL_VARIABLES_HEADER

#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <time.h>
#include <iostream>
#include <fstream>
#include <math.h>
#include <string>
#include <sstream>
#include <cstring>
#include <cstdlib>
#include <vector>

using namespace std;

#define EPS_TOLL 1e-6

#define number_of_CPU 1

#define MULT 100 //used for scaling

////////////////////////////////////////////////////////////////////////////////////////////////////
#include <cplex.h>
#include <ilocplex.h>
////////////////////////////////////////////////////////////////////////////////////////////////////


#include "Graph_v4.h"

struct Vertex {
    int id;
    int weight;
	int degree;
};



typedef struct
{

	/////////////////////////////////////INPUT/////////////////////////////////////
	char *istname_graph;
	char *istname_weights;
	string PARAM_APPROACH, PARAM_COLORING_METHOD;
	///////////////////////////////////////////////////////////////////////////////
	///////////////////////////////////PARAMETERS//////////////////////////////////
	int PARAM_RANDOM_SEED;
	double PARAM_TIME_LIMIT;
	///////////////////////////////////////////////////////////////////////////////


	/////////////////////////////ONE SHOT BOUND///////////////////////////////
	IloEnv env;
	IloModel model;
	IloCplex cplex;

	IloArray<IloNumVarArray> rho;
	IloNumVarArray pi;

	double SanSegundoBound;
	double SanSegundoBound_BestObjVal;
	IloAlgorithm::Status SanSegundoBound_status;
	///////////////////////////////////////////////////////////////////////////////


	////////////////////////////////////COLORING////////////////////////////////////
	int num_colors;
	int *v_color;
	///////////////////////////////////////////////////////////////////////////////

	/////////////////////////////////Shimizu BOUND/////////////////////////////////
	double ShimizuBound;
	double ShimizuBound_first_policy;
	double *Shimizu_w;
	///////////////////////////////////////////////////////////////////////////////

	///////////////////////////////////////////////////////////////////////////////
	graphFF G;
	graphFF G_bar;
	double *VERTEX_WEIGHTS;
	int *VERTEX_WEIGHTS_int;
	///////////////////////////////////////////////////////////////////////////////

	////////////////////////////////// TIMES //////////////////////////////////////
	double SanSegundoBound_Time, ShimizuBound_Time;
	///////////////////////////////////////////////////////////////////////////////


} instance;



#endif
